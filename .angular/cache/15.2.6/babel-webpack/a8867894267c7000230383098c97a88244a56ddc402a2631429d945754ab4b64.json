{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/forms\";\nexport class ConnexionComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.user = {\n      username: '',\n      password: ''\n    };\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      this.authService.login(this.user.username, this.user.password).subscribe(response => {\n        // Gérer la réponse et stocker les informations d'authentification\n      });\n    }\n  }\n}\nConnexionComponent.ɵfac = function ConnexionComponent_Factory(t) {\n  return new (t || ConnexionComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nConnexionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConnexionComponent,\n  selectors: [[\"app-connexion\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"login-container\"], [3, \"submit\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function ConnexionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"submit\", function ConnexionComponent_Template_form_submit_3_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Nom d'utilisateur\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ConnexionComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.user.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ConnexionComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Se connecter\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    min-height: 100vh;\\r\\n    font-family: 'Roboto', sans-serif;\\r\\n  }\\r\\n  \\r\\n  h1[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n  \\r\\n  .form-container[_ngcontent-%COMP%] {\\r\\n    background-color: #ffffff;\\r\\n    padding: 2rem;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n    width: 100%;\\r\\n    max-width: 400px;\\r\\n  }\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  margin-bottom: 1.5rem;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 0.5rem;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%] {\\r\\n  padding: 0.5rem;\\r\\n  font-size: 1rem;\\r\\n  border: 1px solid #cccccc;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  cursor: pointer;\\r\\n  background-color: #007bff;\\r\\n  color: #ffffff;\\r\\n  padding: 0.5rem;\\r\\n  font-size: 1rem;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #0069d9;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:disabled {\\r\\n  background-color: #b3d7ff;\\r\\n  cursor: not-allowed;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29ubmV4aW9uL2Nvbm5leGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QjtBQUM1Qiw0QkFBNEI7QUFDNUI7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLGlDQUFpQztFQUNuQzs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix3Q0FBd0M7SUFDeEMsV0FBVztJQUNYLGdCQUFnQjtFQUNsQjtBQUNGO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZUFBZTtFQUNmLHlCQUF5QjtFQUN6QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsZUFBZTtFQUNmLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsV0FBVztBQUNiOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGNvbm5leGlvbi5jb21wb25lbnQuY3NzICovXHJcbi8qIGNvbm5leGlvbi5jb21wb25lbnQuY3NzICovXHJcbi5sb2dpbi1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuICB9XHJcbiAgXHJcbiAgaDEge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gIH1cclxuLmZvcm0tZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICBwYWRkaW5nOiAwLjVyZW07XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2NjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gIGNvbG9yOiAjZmZmZmZmO1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA2OWQ5O1xyXG59XHJcblxyXG5idXR0b246ZGlzYWJsZWQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNiM2Q3ZmY7XHJcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,kBAAkB;EAM7BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAL/B,SAAI,GAAG;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACX;EAE8C;EAE/CC,QAAQ,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC,IAAI,CAACC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAACM,IAAI,CAACL,QAAQ,CAAC,CAACM,SAAS,CAACC,QAAQ,IAAG;QAClF;MAAA,CACD,CAAC;;EAEN;;AAdWX,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCT/BC,8BAA6B;MACrBA,yBAAS;MAAAA,iBAAK;MAClBA,kCAAyD;MAAnDA;QAAAA;QAAA;QAAA,OAAUA,gCAAmB;MAAA,EAAC;MAClCA,8BAAwB;MACAA,iCAAiB;MAAAA,iBAAQ;MAC/CA,gCAAgG;MAA/CA;QAAA;MAAA,EAA2B;MAA5EA,iBAAgG;MAGlGA,8BAAwB;MACAA,6BAAY;MAAAA,iBAAQ;MAC1CA,iCAA0F;MAArCA;QAAA;MAAA,EAA2B;MAAhFA,iBAA0F;MAG5FA,kCAAoD;MAAAA,6BAAY;MAAAA,iBAAS;;;;MARtBA,eAA2B;MAA3BA,2CAA2B;MAKvBA,eAA2B;MAA3BA,2CAA2B;MAG5DA,eAA6B;MAA7BA,qCAA6B","names":["ConnexionComponent","constructor","authService","username","password","onSubmit","form","valid","login","user","subscribe","response","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\saubi\\ANGULAR PROJECTS\\ASII\\M1-angular\\src\\app\\connexion\\connexion.component.ts","C:\\Users\\saubi\\ANGULAR PROJECTS\\ASII\\M1-angular\\src\\app\\connexion\\connexion.component.html"],"sourcesContent":["// connexion.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  selector: 'app-connexion',\r\n  templateUrl: './connexion.component.html',\r\n  styleUrls: ['./connexion.component.css']\r\n})\r\nexport class ConnexionComponent {\r\n  user = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (form.valid) {\r\n      this.authService.login(this.user.username, this.user.password).subscribe(response => {\r\n        // Gérer la réponse et stocker les informations d'authentification\r\n      });\r\n    }\r\n  }\r\n}\r\n","<!-- login.component.html -->\r\n<div class=\"login-container\">\r\n    <h1>Connexion</h1>\r\n    <form (submit)=\"onSubmit(loginForm)\" #loginForm=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Nom d'utilisateur</label>\r\n        <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"user.username\" required autofocus>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Mot de passe</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"user.password\" required>\r\n      </div>\r\n  \r\n      <button type=\"submit\" [disabled]=\"!loginForm.valid\">Se connecter</button>\r\n    </form>\r\n  </div>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}