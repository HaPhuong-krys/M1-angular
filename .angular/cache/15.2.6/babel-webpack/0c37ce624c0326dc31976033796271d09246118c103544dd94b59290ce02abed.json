{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class LoginService {\n  login(email, password) {\n    const body = {\n      email: email,\n      password: password\n    };\n    return this.http.post(`${this.apiUrl}/login`, body).pipe(tap(user => {\n      this.isLoggedIn.next(true);\n      this.currentUser.next(user.firstname);\n    }));\n  }\n  logout() {\n    this.isLoggedIn.next(false);\n    this.router.navigate(['/Connexion']);\n    this.currentUser.next('');\n  }\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = 'http://localhost:8080/Projet-REST-V1/users';\n    this.isLoggedIn = new BehaviorSubject(false);\n    this.isLoggedIn$ = this.isLoggedIn.asObservable();\n    this.currentUser = new BehaviorSubject({\n      id_user: 0,\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      role: ''\n    });\n    this.currentUser$ = this.currentUser.asObservable();\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,eAAe,QAAQ,MAAM;;;;AAgBlD,OAAM,MAAOC,YAAY;EAWvBC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,IAAI,GAAG;MAAEF,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAE;IACjD,OAAO,IAAI,CAACE,IAAI,CAACC,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAEH,IAAI,CAAC,CAACI,IAAI,CAC3DC,GAAG,CAAEC,IAAI,IAAI;MACX,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;MAC1B,IAAI,CAACC,WAAW,CAACD,IAAI,CAACF,IAAI,CAACI,SAAS,CAAC;IACvC,CAAC,CAAC,CACH;EACH;EAIEC,MAAM;IACJ,IAAI,CAACJ,UAAU,CAACC,IAAI,CAAC,KAAK,CAAC;IAC3B,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACpC,IAAI,CAACJ,WAAW,CAACD,IAAI,CAAC,EAAE,CAAC;EAC3B;EAEFM,YAAoBb,IAAgB,EAAUW,MAAe;IAAzC,SAAI,GAAJX,IAAI;IAAsB,WAAM,GAANW,MAAM;IA3B5C,WAAM,GAAG,4CAA4C;IAErD,eAAU,GAAG,IAAIjB,eAAe,CAAU,KAAK,CAAC;IACxD,gBAAW,GAAG,IAAI,CAACY,UAAU,CAACQ,YAAY,EAAE;IAErC,gBAAW,GAAG,IAAIpB,eAAe,CAAO;MAAEqB,OAAO,EAAE,CAAC;MAAEN,SAAS,EAAE,EAAE;MAAEO,QAAQ,EAAE,EAAE;MAAEnB,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEmB,IAAI,EAAE;IAAE,CAAE,CAAC;IAC9H,iBAAY,GAAG,IAAI,CAACT,WAAW,CAACM,YAAY,EAAE;EAqBmB;;AA7BtDnB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAuB,SAAZvB,YAAY;EAAAwB,YAHX;AAAM","names":["BehaviorSubject","LoginService","login","email","password","body","http","post","apiUrl","pipe","tap","user","isLoggedIn","next","currentUser","firstname","logout","router","navigate","constructor","asObservable","id_user","lastname","role","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\saubi\\ANGULAR PROJECTS\\ASII\\M1-angular\\src\\app\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\nexport interface user {\n  id_user: number;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  role: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n\n  private apiUrl = 'http://localhost:8080/Projet-REST-V1/users';\n  \n  private isLoggedIn = new BehaviorSubject<boolean>(false);\n  isLoggedIn$ = this.isLoggedIn.asObservable();\n\n  public currentUser = new BehaviorSubject<user>({ id_user: 0, firstname: '', lastname: '', email: '', password: '', role: '' });\n  currentUser$ = this.currentUser.asObservable();\n\n\n  login(email: string, password: string): Observable<any> {\n    const body = { email: email, password: password };\n    return this.http.post<any>(`${this.apiUrl}/login`, body).pipe(\n      tap((user) => {\n        this.isLoggedIn.next(true);\n        this.currentUser.next(user.firstname);\n      })\n    );\n  }\n  \n  \n\n    logout() {\n      this.isLoggedIn.next(false);\n      this.router.navigate(['/Connexion']);\n      this.currentUser.next('');\n    }\n\n  constructor(private http: HttpClient, private router : Router) { }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}