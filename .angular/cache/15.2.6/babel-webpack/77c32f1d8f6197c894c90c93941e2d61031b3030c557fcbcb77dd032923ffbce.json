{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nlet LoginService = class LoginService {\n  // ...\n  login() {\n    this.isLoggedIn.next(true);\n  }\n  logout() {\n    this.isLoggedIn.next(false);\n  }\n  loginUser(email, password) {\n    const body = {\n      email: email,\n      password: password\n    };\n    return this.http.post(`${this.apiUrl}/login`, body);\n  }\n  constructor(router) {\n    this.router = router;\n    this.apiUrl = 'http://localhost:8080/Projet-REST-V1/users';\n    this.isLoggedIn = new BehaviorSubject(false);\n    this.isLoggedIn$ = this.isLoggedIn.asObservable();\n  }\n};\nLoginService = __decorate([Injectable({\n  providedIn: 'root'\n})], LoginService);\nexport { LoginService };","map":{"version":3,"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAqBC,eAAe,QAAQ,MAAM;AAW3C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAOvB;EAEAC,KAAK;IACH,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5B;EAEAC,MAAM;IACJ,IAAI,CAACF,UAAU,CAACC,IAAI,CAAC,KAAK,CAAC;EAC7B;EAEAE,SAAS,CAACC,KAAa,EAAEC,QAAgB;IACvC,MAAMC,IAAI,GAAG;MAAEF,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAE;IACjD,OAAO,IAAI,CAACE,IAAI,CAACC,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAEH,IAAI,CAAC;EAC1D;EAEAI,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IApBlB,WAAM,GAAG,4CAA4C;IAErD,eAAU,GAAG,IAAId,eAAe,CAAU,KAAK,CAAC;IACxD,gBAAW,GAAG,IAAI,CAACG,UAAU,CAACY,YAAY,EAAE;EAiBP;CAEtC;AAxBYd,YAAY,eAJxBF,UAAU,CAAC;EACViB,UAAU,EAAE;CACb,CAAC,GAEWf,YAAY,CAwBxB;SAxBYA,YAAY","names":["Injectable","BehaviorSubject","LoginService","login","isLoggedIn","next","logout","loginUser","email","password","body","http","post","apiUrl","constructor","router","asObservable","providedIn"],"sourceRoot":"","sources":["C:\\Users\\saubi\\ANGULAR PROJECTS\\ASII\\M1-angular\\src\\app\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nexport interface user {\n  id: number;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n\n  private apiUrl = 'http://localhost:8080/Projet-REST-V1/users';\n  \n  private isLoggedIn = new BehaviorSubject<boolean>(false);\n  isLoggedIn$ = this.isLoggedIn.asObservable();\n\n  // ...\n\n  login() {\n    this.isLoggedIn.next(true);\n  }\n\n  logout() {\n    this.isLoggedIn.next(false);\n  }\n\n  loginUser(email: string, password: string): Observable<any> {\n    const body = { email: email, password: password };\n    return this.http.post<any>(`${this.apiUrl}/login`, body);\n  }\n\n  constructor(private router: Router) {}\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}